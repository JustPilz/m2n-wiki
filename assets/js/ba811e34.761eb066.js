"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2934],{7925:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=t(4848),s=t(8453);const o={sidebar_position:6},r="dxGetTextDimensions",c={id:"clientFunctions/dx/DxGetTextDimensions",title:"dxGetTextDimensions",description:"This function is used to obtain the width and height of the given text.",source:"@site/docs/clientFunctions/dx/DxGetTextDimensions.md",sourceDirName:"clientFunctions/dx",slug:"/clientFunctions/dx/DxGetTextDimensions",permalink:"/m2n-wiki/docs/clientFunctions/dx/DxGetTextDimensions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"dxDrawLineWorld",permalink:"/m2n-wiki/docs/clientFunctions/dx/DxDrawLineWorld"},next:{title:"dxLoadTexture",permalink:"/m2n-wiki/docs/clientFunctions/dx/DxLoadTexture"}},d={},l=[];function x(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"dxgettextdimensions",children:"dxGetTextDimensions"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to obtain the width and height of the given text."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(text: string, scale: float, font: string)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"text - The text, of which the width is to be read"}),"\n",(0,i.jsx)(n.li,{children:"scale - The scale of the font in your text"}),"\n",(0,i.jsx)(n.li,{children:"font - The font used for your text"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-squirrel",children:'// Draw text in the middle of the screen\r\nlocal screen = getScreenSize();\r\nlocal dimensions = dxGetTextDimensions("Hello world!", 1.4, "tahoma-bold");\r\ndxDrawText("Hello world!", ((screen[0] / 2) - (dimensions[0] / 2)), ((screen[1] / 2) -\r\n(dimensions[1] / 2)), 0xFFFF0000, true, "tahoma-bold", 1.4);\n'})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);