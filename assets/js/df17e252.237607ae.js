"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6833],{581:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=t(4848),i=t(8453);const o={sidebar_position:2},r="getDistanceBetweenPoints3D",c={id:"serverFunctions/GetDistanceBetweenPoints3D",title:"getDistanceBetweenPoints3D",description:"This function is used to return the distance between two 3D points.",source:"@site/docs/serverFunctions/GetDistanceBetweenPoints3D.md",sourceDirName:"serverFunctions",slug:"/serverFunctions/GetDistanceBetweenPoints3D",permalink:"/m2n-wiki/docs/serverFunctions/GetDistanceBetweenPoints3D",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"getDistanceBetweenPoints2D",permalink:"/m2n-wiki/docs/serverFunctions/GetDistanceBetweenPoints2D"},next:{title:"getPlayerCount",permalink:"/m2n-wiki/docs/serverFunctions/GetPlayerCount"}},a={},d=[];function l(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"getdistancebetweenpoints3d",children:"getDistanceBetweenPoints3D"}),"\n",(0,s.jsx)(n.p,{children:"This function is used to return the distance between two 3D points."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"(X1: float, Y1: float, Z1: float, X2: float, Y2: float, Z2: float)\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"X1 - The X coordinate of the first point"}),"\n",(0,s.jsx)(n.li,{children:"Y1 - The Y coordinate of the first point"}),"\n",(0,s.jsx)(n.li,{children:"Z1 - The Z coordinate of the first point"}),"\n",(0,s.jsx)(n.li,{children:"X2 - The X coordinate of the second point"}),"\n",(0,s.jsx)(n.li,{children:"Y2 - The Y coordinate of the second point"}),"\n",(0,s.jsx)(n.li,{children:"Z2 - The Z coordinate of the second point"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns"})}),"\n",(0,s.jsx)(n.p,{children:"float - distance"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-squirrel",children:'addCommandHandler("getdistance", function(playerid) {\r\n    local myPos = getPlayerPosition(playerid);\r\n    local dis = getDistanceBetweenPoints3D(400.0, 200.0, -14.0, myPos[0], myPos[1], myPos[2]);\r\n    sendPlayerMessage(playerid, "Distance between points: " + dis + ".");\r\n});\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);