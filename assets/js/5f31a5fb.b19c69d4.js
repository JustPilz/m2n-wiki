"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9312],{1633:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=r(4848),s=r(8453);const i={sidebar_position:2},o="getPlayerIdFromName",a={id:"serverFunctions/GetPlayerIdFromName",title:"getPlayerIdFromName",description:"This function is used to return the player ID from a players name.",source:"@site/docs/serverFunctions/GetPlayerIdFromName.md",sourceDirName:"serverFunctions",slug:"/serverFunctions/GetPlayerIdFromName",permalink:"/m2n-wiki/docs/serverFunctions/GetPlayerIdFromName",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"getPlayerHealth",permalink:"/m2n-wiki/docs/serverFunctions/GetPlayerHealth"},next:{title:"getPlayerModel",permalink:"/m2n-wiki/docs/serverFunctions/GetPlayerModel"}},l={},d=[];function c(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"getplayeridfromname",children:"getPlayerIdFromName"}),"\n",(0,t.jsx)(n.p,{children:"This function is used to return the player ID from a players name."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"(name: string)\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"name - The name of the player to find"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsx)(n.p,{children:"integer - If the player is found, this will return the players ID; otherwise it will return"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-squirrel",children:'addCommandHandler("id", function(playerid, name) {\r\n    if(name.len() > 1) {\r\n        local otherid = getPlayerIdFromName(name);\r\n        if(otherid != INVALID_ENTITY_ID) {\r\n            sendPlayerMessage(playerid, getPlayerName(otherid) + " - " + otherid);\r\n        } else {\r\n            sendPlayerMessage(playerid, "Player not found!");\r\n        }\r\n    }\r\n});\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);