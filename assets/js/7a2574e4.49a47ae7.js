"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8422],{2960:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=i(4848),t=i(8453);const o={sidebar_position:2},s="isPointInArea2D",a={id:"serverFunctions/IsPointInArea2D",title:"isPointInArea2D",description:"This function is used to check if a point is within a 2D area.",source:"@site/docs/serverFunctions/IsPointInArea2D.md",sourceDirName:"serverFunctions",slug:"/serverFunctions/IsPointInArea2D",permalink:"/m2n-wiki/docs/serverFunctions/IsPointInArea2D",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"isPlayerSpawned",permalink:"/m2n-wiki/docs/serverFunctions/IsPlayerSpawned"},next:{title:"isPointInArea3D",permalink:"/m2n-wiki/docs/serverFunctions/IsPointInArea3D"}},c={},l=[];function d(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"ispointinarea2d",children:"isPointInArea2D"}),"\n",(0,r.jsx)(n.p,{children:"This function is used to check if a point is within a 2D area."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(PointX: float, PointY: float, areaX: float, areaY: float, areaX2: float, areaY2: float)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PointX - The X coordinate of the point"}),"\n",(0,r.jsx)(n.li,{children:"PointY - The Y coordinate of the point"}),"\n",(0,r.jsx)(n.li,{children:"areaX - The X coordinate of the first area point"}),"\n",(0,r.jsx)(n.li,{children:"areaY - The Y coordinate of the first area point"}),"\n",(0,r.jsx)(n.li,{children:"areaX2 - The X coordinate of the second area point"}),"\n",(0,r.jsx)(n.li,{children:"areaY2 - The Y coordinate of the second area point"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The point is not in the 3D area"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-squirrel",children:'addCommandHandler("checkpoint" , function(playerid) {\r\n        local myPos = getPlayerPosition(playerid);\r\n        local check = IsPointInArea2D(myPos[0], myPos[1], 20.0, 20.0, 80.0, 80.0);\r\n        if(check) {\r\n            sendPlayerMessage(playerid, "You are within the 2D area!");\r\n        }\r\n});\r\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var r=i(6540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);